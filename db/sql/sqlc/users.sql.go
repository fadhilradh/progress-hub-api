// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: users.sql

package db

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users(username, email, password, created_at, updated_at, role)
VALUES($1, $2, $3, $4, $5, $6)
RETURNING username, email, role
`

type CreateUserParams struct {
	Username  string       `json:"username"`
	Email     string       `json:"email"`
	Password  string       `json:"password"`
	CreatedAt sql.NullTime `json:"created_at"`
	UpdatedAt sql.NullTime `json:"updated_at"`
	Role      NullRole     `json:"role"`
}

type CreateUserRow struct {
	Username string   `json:"username"`
	Email    string   `json:"email"`
	Role     NullRole `json:"role"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (CreateUserRow, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.Username,
		arg.Email,
		arg.Password,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.Role,
	)
	var i CreateUserRow
	err := row.Scan(&i.Username, &i.Email, &i.Role)
	return i, err
}
