// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: progress.sql

package db

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const createProgress = `-- name: CreateProgress :one
INSERT INTO progress(
    user_id, 
    range_type, 
    range_value, 
    progress_name, 
    progress_value, 
    created_at
)
VALUES(
    $1, 
    $2, 
    $3,
    $4,
    $5,
    now()
) RETURNING id, progress_name, progress_value, range_type, range_value, created_at, updated_at, user_id
`

type CreateProgressParams struct {
	UserID        uuid.NullUUID  `json:"user_id"`
	RangeType     NullRange      `json:"range_type"`
	RangeValue    sql.NullString `json:"range_value"`
	ProgressName  sql.NullString `json:"progress_name"`
	ProgressValue sql.NullInt64  `json:"progress_value"`
}

func (q *Queries) CreateProgress(ctx context.Context, arg CreateProgressParams) (Progress, error) {
	row := q.db.QueryRowContext(ctx, createProgress,
		arg.UserID,
		arg.RangeType,
		arg.RangeValue,
		arg.ProgressName,
		arg.ProgressValue,
	)
	var i Progress
	err := row.Scan(
		&i.ID,
		&i.ProgressName,
		&i.ProgressValue,
		&i.RangeType,
		&i.RangeValue,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.UserID,
	)
	return i, err
}
